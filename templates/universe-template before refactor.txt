{% macro render_section(universe, title, backgroundColor, since_include, lastrun_include, note_text, table_paths, pnl_paths, dnpnl_paths, dnpnl_s_paths, table_s_paths) %}
    <div class="section" style="background-color:{{ backgroundColor }};">
        <div class="section-content">
            <!-- Title and Button -->
            <div class="row justify-content-between align-items-center mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>{{ title }}</h2>
                    <button class="btn btn-custom" disabled>View more</button>
                </div>
                <p style="font-size: 0.9rem;">
                    Since: {% include since_include %}
                    <br>
                    Last run: {% include lastrun_include %}
                </p>
                {% if note_text %}
                    <p>{{ note_text }}</p>
                {% endif %}
            </div>

            <!-- Strategy navigation -->
            {% if pnl_paths|length > 1 %}
            <div class="col range-navigation">
                    <button id="{{ universe }}-top" class="btn btn-custom top-button" onclick="goToTop('{{ universe }}')" style="visibility: hidden;">Top 5</button>
                    <div class="nav-buttons">
                        <button id="{{ universe }}-prev" class="btn btn-custom" onclick="navigateRange('{{ universe}}', -1)" disabled>Prev</button>
                        <span id="{{ universe }}-range-indicator">Top 5</span>
                        <button id="{{ universe }}-next" class="btn btn-custom" onclick="navigateRange('{{ universe }}', 1)">Next</button>
                    </div>
            </div>
            {% endif %}

            <!-- Table/graph filters and toggles -->
            <div class="col d-flex justify-content-end">
                <div class="dropdown">
                    <button type="button" class="btn btn-custom dropdown-toggle" id='dnMode' data-bs-toggle="dropdown" aria-expanded="false">
                        DN mode
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dnMode">
                        <li><a class='dropdown-item' href='#' onclick="toggleDNMode('{{ universe }}', 'index')">index</a></li>
                        <li><a class='dropdown-item' href='#' onclick="toggleDNMode('{{ universe }}', 'synth')">synth. bench</a></li>
                    </ul>
                </div>
            </div>
            

            <!-- Table and Graph -->
            <div class="row d-flex align-items-stretch">
                <div class="col-md-6">
                    <!-- Table goes here -->
                    <div class="table-container">
                        {% for path in table_paths %}
                            <div id="{{ universe }}-table-{{ path.split('/')[-1] }}" {% if loop.first %}style="display: block;"{% else %}style="display: none;"{% endif %}>
                                {% include path %}
                            </div>
                        {% endfor %}
                    </div>
                </div>
                <div class="col-md-6">
                    <!-- Graph goes here -->
                    <div class="graph-container">
                        <div class="row">
                            <h3 class="graph-title">Outright PnL <small>(10% vol-scaled)</small></h3>
                            {% for path in pnl_paths %}
                            <div id="{{ universe }}-pnl-{{ path.split('/')[-1] }}" {% if loop.first %}style="display: block;"{% else %}style="display: none;"{% endif %}>
                                {% include path %}
                            </div>
                            {% endfor %}
                        </div>
                        <div class="row">
                            <h3 class="graph-title">DN PnL <small>(10% vol-scaled)</small></h3>
                            {% for path in dnpnl_paths %}
                            <div id="{{ universe }}-dnpnl-{{ path.split('/')[-1] }}" {% if loop.first %}style="display: block;"{% else %}style="display: none;"{% endif %}>
                                {% include path %}
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        var currentDNMode = 'index';
        var currentIndex = 0;
        var pnlLookup = {{ pnl_paths|tojson }};
        var dnpnlLookup = {{ dnpnl_paths|tojson }};
        var tableLookup = {{ table_paths|tojson }};
        var dnpnl_sLookup = {{ dnpnl_s_paths|tojson }};
        var table_sLookup = {{ table_s_paths|tojson }};

        function updateContent(universe, index) {

            function updateComponent(componentLookup, prefix) {
                var dirlist = componentLookup[index].split('/');
                var selectedPath = dirlist[dirlist.length - 1];

                var contentSections = document.querySelectorAll('div[id^="' + universe + '-' + prefix + '-"]');
                var targetSectionId = universe + '-' + prefix + '-' + selectedPath;

                contentSections.forEach(section => {
                    if (section.id === targetSectionId) {
                        section.style.display = "block";
                        window.dispatchEvent(new Event('resize'));
                    } else {
                        section.style.display = "none";
                    }
                });
            }

            updateComponent(pnlLookup, 'pnl');
            if (currentDNMode == 'index') {
                updateComponent(dnpnlLookup, 'dnpnl');
                updateComponent(tableLookup, 'table');
            } else if (currentDNMode == 'synth') {
                updateComponent(dnpnl_sLookup, 'dnpnl_s');
                updateComponent(table_sLookup, 'table_s');
            }
            
        }

        function updateNavButtons(universe) {
            dirlist = pnlLookup[currentIndex].split('/');
            range = dirlist[dirlist.length - 1].split('.')[0];
            if (range === '1-5') {
                range = 'Top 5';
            }
            document.getElementById(universe + '-range-indicator').innerText = range;
            document.getElementById(universe + '-prev').disabled = (currentIndex === 0);
            document.getElementById(universe + '-next').disabled = (currentIndex === pnlLookup.length - 1);
            document.getElementById(universe + '-top').style.visibility = (currentIndex === 0) ? 'hidden' : 'visible';
        }

        function goToTop(universe) {
            currentIndex = 0;
            updateContent(universe, currentIndex);
            updateNavButtons(universe);
        }

        function navigateRange(universe, direction) {
            currentIndex += direction;

            if (currentIndex < 0) currentIndex = 0;
            if (currentIndex >= pnlLookup.length) currentIndex = pnlLookup.length - 1;

            updateContent(universe, currentIndex);
            updateNavButtons(universe);
        }

        function toggleDNMode(universe, selection) {
            currentDNMode = selection;
            updateContent(universe, currentIndex);
        }

    </script>

{% endmacro %}
